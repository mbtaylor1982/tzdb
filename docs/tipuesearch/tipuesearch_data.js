var tipuesearch = {"pages": [
     {"title": "TZCAPI", "text": " * * Redistribution and use in source and binary forms, with or without * modification, are permitted provided that the following conditions are met: * * Redistributions of source code must retain the above copyright * notice, this list of conditions and the following disclaimer. * * Redistributions in binary form must reproduce the above copyright * notice, this list of conditions and the following disclaimer in the * documentation and/or other materials provided with the distribution. * * Neither the name of this library nor the * names of its contributors may be used to endorse or promote products * derived from this software without specific prior written permission. * * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE * DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. ", "tags": "", "loc": "TZCAPI.html"},
     {"title": "TZCAPI.TZ_Instance", "text": " ", "tags": "", "loc": "TZCAPI.TZ_Instance.html"},
     {"title": "TZCAPI.TZ_Instance.FTZName", "text": " ", "tags": "", "loc": "TZCAPI.TZ_Instance.html#FTZName"},
     {"title": "TZCAPI.TZ_Instance.FTZObject", "text": " ", "tags": "", "loc": "TZCAPI.TZ_Instance.html#FTZObject"},
     {"title": "TZCAPI.ERROR_INST_DISPOSED", "text": " ", "tags": "", "loc": "TZCAPI.html#ERROR_INST_DISPOSED"},
     {"title": "TZCAPI.ERROR_INVALID_ARG", "text": " ", "tags": "", "loc": "TZCAPI.html#ERROR_INVALID_ARG"},
     {"title": "TZCAPI.ERROR_INVALID_LOCAL_TIME", "text": " ", "tags": "", "loc": "TZCAPI.html#ERROR_INVALID_LOCAL_TIME"},
     {"title": "TZCAPI.ERROR_UNKNOWN", "text": " Source or cause unknwown.&lt;/summary&gt; ", "tags": "", "loc": "TZCAPI.html#ERROR_UNKNOWN"},
     {"title": "TZCAPI.LOCAL_TIME_AMBIGUOUS", "text": " ", "tags": "", "loc": "TZCAPI.html#LOCAL_TIME_AMBIGUOUS"},
     {"title": "TZCAPI.LOCAL_TIME_DAYLIGHT", "text": " ", "tags": "", "loc": "TZCAPI.html#LOCAL_TIME_DAYLIGHT"},
     {"title": "TZCAPI.LOCAL_TIME_INVALID", "text": " ", "tags": "", "loc": "TZCAPI.html#LOCAL_TIME_INVALID"},
     {"title": "TZCAPI.LOCAL_TIME_STANDARD", "text": " ", "tags": "", "loc": "TZCAPI.html#LOCAL_TIME_STANDARD"},
     {"title": "TZCAPI.TZ_EnumTimeZones", "text": " &lt;c&gt;False&lt;/c&gt; is returned otherwise.&lt;/returns&gt;    ", "tags": "", "loc": "TZCAPI.html#TZ_EnumTimeZones"},
     {"title": "TZCAPI.TZ_GetAbbreviation", "text": " Should be allocated.&lt;/param&gt; &lt;param name=&quot;AbbrevLen&quot;&gt;The number of characters that &lt;paramref name=&quot;Abbrev&quot;/&gt; can hold (excluding trailing \\0).&lt;/param&gt; &lt;returns&gt;The length of the actual name. If the value is negative, then an error occured. See &lt;c&gt;ERROR_*&lt;/c&gt; constants for possile errors.&lt;/returns&gt; &lt;remarks&gt;It is important to note that the consumer must specify an allocated memory block pointed by &lt;paramref name=&quot;Abbrev&quot;/&gt;. The &lt;paramref name=&quot;AbbrevLen&quot;/&gt; parameter must contain the number of bytes allocated. This method will fill this memory with the actual abbreviation and return the actual length of the abbreviation. There may be cases when the passed memory block is smaller than the actual length of the abbreviation. In those cases, only the part that will fit will be copied into the provided memory block.&lt;/remarks&gt;    ", "tags": "", "loc": "TZCAPI.html#TZ_GetAbbreviation"},
     {"title": "TZCAPI.TZ_GetDisplayName", "text": " Should be allocated.&lt;/param&gt; &lt;param name=&quot;DispNameLen&quot;&gt;The number of characters that &lt;paramref name=&quot;DispName&quot;/&gt; can hold (excluding trailing \\0).&lt;/param&gt; &lt;returns&gt;The length of the actual name. If the value is negative, then an error occured. See &lt;c&gt;ERROR_*&lt;/c&gt; constants for possile errors.&lt;/returns&gt; &lt;remarks&gt;It is important to note that the consumer must specify an allocated memory block pointed by &lt;paramref name=&quot;DispName&quot;/&gt;. The &lt;paramref name=&quot;DispNameLen&quot;/&gt; parameter must contain the number of bytes allocated. This method will fill this memory with the actual name and return the actual length of the name. There may be cases when the passed memory block is smaller than the actual length of the name. In those cases, only the part that will fit will be copied into the provided memory block.&lt;/remarks&gt;    ", "tags": "", "loc": "TZCAPI.html#TZ_GetDisplayName"},
     {"title": "TZCAPI.TZ_GetLocalTimeType", "text": " See &lt;c&gt;LOCAL_TIME_*&lt;/c&gt; constants for possible types. See &lt;c&gt;ERROR_*&lt;/c&gt; constants for possile errors (if the value is negative).&lt;/returns&gt;    ", "tags": "", "loc": "TZCAPI.html#TZ_GetLocalTimeType"},
     {"title": "TZCAPI.TZ_GetUtcOffset", "text": " See &lt;c&gt;ERROR_*&lt;/c&gt; constants for possile errors (if the value is negative).&lt;/returns&gt;    ", "tags": "", "loc": "TZCAPI.html#TZ_GetUtcOffset"},
     {"title": "TZCAPI.TZ_InitInstance", "text": " A &lt;c&gt;nil&lt;/c&gt; value will be ignored.&lt;/param&gt; &lt;returns&gt;A &lt;c&gt;Pointer&lt;/c&gt; to a data structure containing the time zone object. Should be treated as an opaque &lt;c&gt;Pointer&lt;/c&gt; by consumers. A &lt;c&gt;nil&lt;/c&gt; value is returned if the time zone cannot be looked up.&lt;/returns&gt;    ", "tags": "", "loc": "TZCAPI.html#TZ_InitInstance"},
     {"title": "TZCAPI.TZ_LocalToUtc", "text": " See &lt;c&gt;ERROR_*&lt;/c&gt; constants for possile errors (if the value is negative).&lt;/returns&gt;    ", "tags": "", "loc": "TZCAPI.html#TZ_LocalToUtc"},
     {"title": "TZCAPI.TZ_ReleaseInstance", "text": " See &lt;c&gt;ERROR_*&lt;/c&gt; constants for possile errors (if the value is negative).&lt;/returns&gt;    ", "tags": "", "loc": "TZCAPI.html#TZ_ReleaseInstance"},
     {"title": "TZCAPI.TZ_UtcToLocal", "text": " See &lt;c&gt;ERROR_*&lt;/c&gt; constants for possile errors (if the value is negative).&lt;/returns&gt;    ", "tags": "", "loc": "TZCAPI.html#TZ_UtcToLocal"},
     {"title": "TZCAPI.PTZ_Instance", "text": " ", "tags": "", "loc": "TZCAPI.html#PTZ_Instance"},
     {"title": "TZCAPI.PTZ_Time", "text": " ", "tags": "", "loc": "TZCAPI.html#PTZ_Time"},
     {"title": "TZCAPI.TZ_EnumProc", "text": "    ", "tags": "", "loc": "TZCAPI.html#TZ_EnumProc"},
     {"title": "TZCAPI.TZ_Result", "text": " See &lt;c&gt;ERROR_*&lt;/c&gt; constants for reference. Zero and the positive spectrum of values is function dependant. Each function will provide appropriate documentation.&lt;/remarks&gt; ", "tags": "", "loc": "TZCAPI.html#TZ_Result"},
     {"title": "TZCAPI.TZ_Time", "text": " ", "tags": "", "loc": "TZCAPI.html#TZ_Time"},
     {"title": "TZDB", "text": " Checks for specific RTL &quot;features&quot; shared across FreePascal and different versions of Delphi. Recommended version is Delphi XE though ... ", "tags": "", "loc": "TZDB.html"},
     {"title": "TZDB.ELocalTimeInvalid", "text": " ", "tags": "", "loc": "TZDB.ELocalTimeInvalid.html"},
     {"title": "TZDB.ETimeZoneInvalid", "text": " ", "tags": "", "loc": "TZDB.ETimeZoneInvalid.html"},
     {"title": "TZDB.TBundledTimeZone", "text": " ", "tags": "", "loc": "TZDB.TBundledTimeZone.html"},
     {"title": "TZDB.TBundledTimeZone.Create", "text": " &quot;Europe/Bucharest&quot;).&lt;/param&gt; &lt;exception cref=&quot;<a class=\"normal\" href=\"TZDB.html\">TZDB</a>|<a class=\"normal\" href=\"TZDB.ETimeZoneInvalid.html\">ETimeZoneInvalid</a>&quot;&gt;The specified <a class=\"normal\" href=\"TZDB.TBundledTimeZone.html#ID\">ID</a> cannot be found in the bundled database.&lt;/exception&gt;    ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#Create"},
     {"title": "TZDB.TBundledTimeZone.Destroy", "text": "    ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#Destroy"},
     {"title": "TZDB.TBundledTimeZone.GetAbbreviation", "text": "    ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#GetAbbreviation"},
     {"title": "TZDB.TBundledTimeZone.GetDisplayName", "text": "    ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#GetDisplayName"},
     {"title": "TZDB.TBundledTimeZone.GetLocalTimeType", "text": "    ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#GetLocalTimeType"},
     {"title": "TZDB.TBundledTimeZone.GetTimeZone", "text": " &quot;Europe/Bucharest&quot;).&lt;/param&gt; &lt;exception cref=&quot;<a class=\"normal\" href=\"TZDB.html\">TZDB</a>|<a class=\"normal\" href=\"TZDB.ETimeZoneInvalid.html\">ETimeZoneInvalid</a>&quot;&gt;The specified <a class=\"normal\" href=\"TZDB.TBundledTimeZone.html#ID\">ID</a> cannot be found in the bundled database.&lt;/exception&gt;    ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#GetTimeZone"},
     {"title": "TZDB.TBundledTimeZone.GetUtcOffset", "text": " Subtract this value from the passed local time to obtain an UTC time.&lt;/returns&gt; &lt;exception cref=&quot;<a class=\"normal\" href=\"TZDB.html\">TZDB</a>|<a class=\"normal\" href=\"TZDB.ELocalTimeInvalid.html\">ELocalTimeInvalid</a>&quot;&gt;The specified local time is invalid.&lt;/exception&gt;    ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#GetUtcOffset"},
     {"title": "TZDB.TBundledTimeZone.IsAmbiguousTime", "text": "    ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#IsAmbiguousTime"},
     {"title": "TZDB.TBundledTimeZone.IsDaylightTime", "text": "    ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#IsDaylightTime"},
     {"title": "TZDB.TBundledTimeZone.IsInvalidTime", "text": "    ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#IsInvalidTime"},
     {"title": "TZDB.TBundledTimeZone.IsStandardTime", "text": "    ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#IsStandardTime"},
     {"title": "TZDB.TBundledTimeZone.KnownTimeZones", "text": "    ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#KnownTimeZones"},
     {"title": "TZDB.TBundledTimeZone.ToLocalTime", "text": "    ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#ToLocalTime"},
     {"title": "TZDB.TBundledTimeZone.ToUniversalTime", "text": "    ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#ToUniversalTime"},
     {"title": "TZDB.TBundledTimeZone.DoGetID", "text": " An <a class=\"normal\" href=\"TZDB.TBundledTimeZone.html#ID\">ID</a> is a string that should uniquely identify the timezone.&lt;/summary&gt; &lt;returns&gt;The <a class=\"normal\" href=\"TZDB.TBundledTimeZone.html#ID\">ID</a> of the timezone.&lt;/returns&gt;    ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#DoGetID"},
     {"title": "TZDB.TBundledTimeZone.Abbreviation", "text": " ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#Abbreviation"},
     {"title": "TZDB.TBundledTimeZone.DisplayName", "text": " ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#DisplayName"},
     {"title": "TZDB.TBundledTimeZone.ID", "text": " An <code>ID</code> is a string that should uniquely identify the timezone.&lt;/summary&gt; &lt;returns&gt;The <code>ID</code> of the timezone.&lt;/returns&gt; ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#ID"},
     {"title": "TZDB.TBundledTimeZone.UtcOffset", "text": " ", "tags": "", "loc": "TZDB.TBundledTimeZone.html#UtcOffset"},
     {"title": "TZDB.TLocalTimeType", "text": "  lttStandard &lt;summary&gt;The local time is in the Standard year period.&lt;/summary&gt;   lttDaylight &lt;summary&gt;The local time is in the DST year period.&lt;/summary&gt;   lttAmbiguous &lt;summary&gt;The local time is in DST -&gt; Standard year period.&lt;/summary&gt;   lttInvalid &lt;summary&gt;The local time is in the Standard -&gt; DST year period.&lt;/summary&gt;  ", "tags": "", "loc": "TZDB.html#TLocalTimeType"}
]};
